package com.tweetapp.tweetservice.bean;

import java.time.LocalDateTime;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedEpochDate;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConvertedTimestamp;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverter;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.fasterxml.jackson.annotation.JsonAlias;
import com.tweetapp.tweetservice.bean.Tweet.LocalDateTimeConverter;

/**
 * @author Nithya T
 *
 */
@DynamoDBTable(tableName = "tweets")
public class ReplyTweet {
	
	@DynamoDBHashKey(attributeName = "id")
	@JsonAlias("_id")
	private String id;
	@DynamoDBAttribute(attributeName = "loginId")
	private String loginId;
	@DynamoDBAttribute(attributeName = "repliedMessage")
	private String repliedMessage;
	@DynamoDBTypeConverted(converter = LocalDateTimeConverter.class)
	@DynamoDBAttribute(attributeName = "repliedDTTM")
	private LocalDateTime repliedDTTM;
	@DynamoDBTyped(DynamoDBAttributeType.N)
	@DynamoDBAttribute(attributeName = "replyMsglike")
	private Long replyMsglike;
	@DynamoDBTyped(DynamoDBAttributeType.BOOL)
	@DynamoDBAttribute(attributeName = "liked")
	private boolean liked;
	
	public boolean isLiked() {
		return liked;
	}

	public void setLiked(boolean liked) {
		this.liked = liked;
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getLoginId() {
		return loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}

	public String getRepliedMessage() {
		return repliedMessage;
	}

	public void setRepliedMessage(String repliedMessage) {
		this.repliedMessage = repliedMessage;
	}

	public LocalDateTime getRepliedDTTM() {
		return repliedDTTM;
	}

	public void setRepliedDTTM(LocalDateTime repliedDTTM) {
		this.repliedDTTM = repliedDTTM;
	}

	public Long getReplyMsglike() {
		return replyMsglike;
	}

	public void setReplyMsglike(Long replyMsglike) {
		this.replyMsglike = replyMsglike;
	}

	@Override
	public String toString() {
		return "ReplyTweet [id=" + id + ", loginId=" + loginId + ", repliedMessage=" + repliedMessage + ", repliedDTTM="
				+ repliedDTTM + ", replyMsglike=" + replyMsglike + ", liked=" + liked + "]";
	}
	static public class LocalDateTimeConverter implements DynamoDBTypeConverter<String, LocalDateTime> {

        @Override
        public String convert( final LocalDateTime time ) {

            return time.toString();
        }

        @Override
        public LocalDateTime unconvert( final String stringValue ) {

            return LocalDateTime.parse(stringValue);
        }
    }


}
